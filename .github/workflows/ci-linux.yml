name: ci-linux

# Trigger the workflow on push or pull request
on:
  pull_request:
    # branches: [master]
  push:
    paths:
      - '.github/workflows/ci-linux.yml'
      - 'Setup.hs'
      - 'stack*.yaml'
      - '*.cabal'
      - '*/src/**'
      - '*/cbits/**'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ghc:
          - "8.10"
          - "8.8"
          - "8.6"
          - "8.4"
        cuda:
          - "13.0"
          - "12.9"
          - "12.5"

        # include:
        #   - os: windows-latest
        #     ghc: "8.10"
        #     cuda: "10.2.89.20191206"

    env:
      STACK_FLAGS: "--fast"
      HADDOCK_FLAGS: "--haddock --no-haddock-deps --no-haddock-hyperlink-source --haddock-arguments=\"--no-print-missing-docs\""

    steps:
      - uses: actions/checkout@v5

      - run: ln -s stack-${{ matrix.ghc }}.yaml stack.yaml

      - uses: actions/cache@v4
        with:
          path: snapshot.pkgdb
          key: ${{ runner.os }}-${{ matrix.ghc }}-${{ matrix.cuda }}-snapshot.pkgdb

      - uses: actions/cache@v4
        with:
          path: |
            ~/.local/bin
            ~/.stack/programs
            ~/.stack/snapshots
            .stack-work
          key: ${{ runner.os }}-${{ matrix.ghc }}-${{ matrix.cuda }}-${{ hashFiles('stack.yaml') }}-${{ hashFiles('snapshot.pkgdb') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.ghc }}-${{ matrix.cuda }}-${{ hashFiles('stack.yaml') }}-
            ${{ runner.os }}-${{ matrix.ghc }}-${{ matrix.cuda }}-

      - name: Install stack
        run: |
          mkdir -p ~/.local/bin
          if [[ ! -x ~/.local/bin/stack ]]; then
            curl -sL https://get.haskellstack.org/stable/linux-x86_64.tar.gz | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
            chmod a+x ~/.local/bin/stack
          fi
          echo "~/.local/bin" >> $GITHUB_PATH

      - name: Install GHC
        run: stack setup --install-ghc

      - name: Install CUDA
        run: |
          MATRIX_CUDA=${{ matrix.cuda }}
          UBUNTUVER=$(sed -n '/^DISTRIB_RELEASE=/ { s/.*=//; s/\.//; p; q; }' /etc/lsb-release)
          wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu$UBUNTUVER/x86_64/cuda-keyring_1.1-1_all.deb
          sudo dpkg -i cuda-keyring_1.1-1_all.deb
          sudo apt-get update
          sudo apt-get -y install cuda-${MATRIX_CUDA/./-}
          echo "CUDA_HOME=/usr/local/cuda-${MATRIX_CUDA}" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=/usr/local/cuda-${MATRIX_CUDA}/lib64:$(stack exec ghc -- --print-libdir)/rts:/usr/local/cuda-${MATRIX_CUDA}/nvvm/lib64:${LD_LIBRARY_PATH}" >> $GITHUB_ENV
          echo "/usr/local/cuda-${MATRIX_CUDA}/bin" >> $GITHUB_PATH

      - name: Build dependencies
        run: stack build $STACK_FLAGS --only-dependencies

      - name: Build
        run: stack build $STACK_FLAGS $HADDOCK_FLAGS

      - name: Save snapshot.pkgdb
        run: stack exec ghc-pkg -- --package-db=$(stack path --snapshot-pkg-db) list > snapshot.pkgdb

